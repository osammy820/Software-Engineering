Please make sure to read every bit of instruction in the "instruction.txt" file
before you start answering these question.

Questions
1. What is a software process model and why is it important in software development?

2. Compare and contrast the Waterfall and Agile software process models. 
What are the key differences between the two models and 
what are the benefits and drawbacks of each?

3. What is Rational Unified Process (RUP), and 
how does it differ from other software development process models? 
What are the key phases and activities involved in RUP, and 
what are the benefits and drawbacks of using this approach in software development projects?


Questions
1. What is a software process model and why is it important in software development?

//Answer to Question 1
A software process model is an abstract representation of a process. It is important 
because, it provides a structured approach to software development that helps ensure
quality, consistency, and efficiency in the development process and also provides a
framework for managing the development processes. 




2. Compare and contrast the Waterfall and Agile software process models. 
What are the key differences between the two models and 
what are the benefits and drawbacks of each?

//Answers to Question 2
Differences
1. The Waterfall model is a linear sequential process model, where each phase of the 
software development process is completed before the next phase begins. While,
the Agile model is an iterative and incremental process model, where software is 
developed in short, iterative cycles that involve continuous feedback and 
collaboration between the developers and stakeholders.

2. Waterfall is plan driven, while Agile is value and product driven

3. Waterfall is suited for projects with well-defined requirements and a fixed
timeframe, while Agile is suited for projects with changing requirements and no
fixed timeframe.

Benefits
1. Waterfall
Well-defined requirements and scope
Clear project phases and deliverables
Predictable timeline and budget

2. Agile
Continuous feedback and adaptation
Very Flexible and adaptable to constant changing requirements
Higher collaboration between developers and stakeholders

Drawbacks
1. Waterfall
Limited feedback
Less or no adaptability hence high risk of project failure if requirements change
Very difficulty in accommodating changes during development

2. Agile
Uncertainty in project scope and timeline can increase cost
Project management is complex
Potential for scope creep


